// Mastermind game methods
function generateSolution(){
    // Create a random string with length 4 containing only values
    // from the letters "ROYGBV". Each of these letters will represent
    // the colors red, orange, yellow, green, blue, and violet.
    // WRITE YOUR CODE HERE
    var ret = "";
    var colors = "ROYGBV";
    for (var i = 0; i < 4; i++) {
        ret += colors.charAt((Math.random() * 6) | 0);
    }
    return ret;
}
function checkAnswerMatch(currentGuess, answer){
    // This method will compare two sequences of input parameters:
    // "currentGuess", the sequence of guesses, and "answer", which
    // is the correct solution sequence generated by the method you wrote
    // above (generateSolution).
    // This method should return the number of correct matches between the
    // two inputs, where a correct match is defined as the same character in
    // the same position in each of the two input strings.
    //WRITE YOUR CODE HERE
    var correct = 0;
    for (var i = 0; i < answer.length; i++) {
        if (currentGuess[i] == answer.charAt(i)) {
            correct ++;
        }
    }
    return correct;
}
function checkAnswerWrongPlace(ans, realanswer){
    // This method compares two input strings representing a player's guess ("ans")
    // at the correct sequence of colored pegs and the actual correct solution
    // ("realanswer"). But instead of returning the correct number of positional
    // matches between the two strings, this method returns the number of
    // character matches between the two strings where the matching characters
    // are not in the same position in both strings: hence "right answer, wrong place".
    //WRITE YOUR CODE HERE
    var correct = 0;
    var tempAns = realanswer;
    for (var i = 0; i < realanswer.length; i++) {
        if (ans.charAt(i) == realanswer.charAt(i)) {
            ans = ans.substring(0, i) + "-" + ans.substring(i + 1);
            tempAns = tempAns.substring(0, i) + "-" + tempAns.substring(i + 1);
        }
    }
    for (var i = 0; i < tempAns.length; i++) {
        if (ans.charAt(i) == "-") {
            continue;
        }
        var character = ans.charAt(i);
        if (tempAns.indexOf(character) != -1) {
            correct++;
        }
    }
    return correct;
}